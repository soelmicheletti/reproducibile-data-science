load("/home/soel/Desktop/29282-0001-Data.rda")
load("/home/soel/Desktop/ICPSR_04652/DS0001/04652-0001-Data.rda")
df <- inner_join(da29282.0001, da04652.0001, by="M2ID") # merge the two dataframes using an inner join
df <- inner_join(da29282.0001, da04652.0001, by="M2ID") # merge the two dataframes using an inner join
df <- inner_join(da29282.0001, da04652.0001, by="M2ID") # merge the two dataframes using an inner join
load("/home/soel/Desktop/29282-0001-Data.rda")
load("/home/soel/Desktop/ICPSR_04652/DS0001/04652-0001-Data.rda")
rm(da04652.0001)
rm(da29282.0001)
getwd()
library(dplyr)
library(ggplot2)
library(tidyr)
library(forcats)
getSrcDirectory(function(){})[1]
getSrcDirectory(function(){})[1]
dirname(parent.frame(2)$ofile)
dirname(parent.frame(2))
dirname(c(parent.frame(2)))
rstudioapi::getActiveDocumentContext()$path
setwd("~/reproducibile-data-science/midus")
getwd()
load("/data/04652-0001-Data.rda") # load MIDUS2 interview/questionnaire data
load("data/04652-0001-Data.rda") # load MIDUS2 interview/questionnaire data
load("data/29282-0001-Data.rda") # load MIDUS2 biomarker data
df <- inner_join(da29282.0001, da04652.0001, by="M2ID") # merge the two dataframes using an inner join
dim(df)
df <- df %>% drop_na(B1SORIEN, # optimism
B4BHDL, # lipids
B4BLDL,
B4BCHOL,
B4BTRIGL,
B1PAGE_M2.x, # demographics
B1PRSEX.x,
B1PF7A,
B1PB1,
B1STINC1)
dim(df)
educ <- fct_collapse(df$B1PB1,
`Less than high school` = c("(01) No school/some grade school (1-6)",
"(02) Eighth grade/junior high school (7-8)",
"(03) Some high school (9-12 no diploma/no GED)"),
`High school degree` = c("(04) GED", "(05) Graduated from high school"),
`Some college` = c("(06) 1 to 2 years of college, no degree yet",
"(07) 3 or more years of college, no degree yet"),
`College degree or greater` = c("(08) Graduated from 2-year college, vocational school, or associate degree",
"(09) Graduated from a 4- or 5-year college, or bachelor's degree",
"(10) Some graduate school",
"(11) Master's degree",
"(12) PH.D., ED.D., MD, DDS, LLB, LLD, JD, or other professional degree")
)
df$B1PB1 <- educ
race <- fct_collapse(df$B1PF7A,
`White` = "(1) White",
`Nonwhite` = c("(2) Black and/or African American",
"(3) Native American or Alaska Native Aleutian Islander/Eskimo",
"(4) Asian",
"(5) Native Hawaiian or Pacific Islander",
"(6) Other (specify)")
)
df$B1PF7A <- race
age <- fct_collapse(df$B1PRSEX.x, `Male` = "(1) Male", `Female` = "(2) Female")
df$B1PRSEX.x <- age
df_group1 = df
if (!require('pacman')) {
install.packages('pacman')
}
pacman::p_load('data.table')
# convert data to data.table
df <- data.table(df)
# create chronic conditions variable
df[!is.na(B1SCHROX), chronic_conditions := ifelse(B1SCHROX == '(1) Yes', 1, 0)] # recode to binary
df[!is.na(B1PA24B) | !is.na(B1PA24C), bp_med := ifelse( (B1PA24B == '(1) Yes' & !is.na(B1PA24B)) | (B1PA24C == '(1) Yes' & !is.na(B1PA24C)), 1, 0)]
df[B1PA24 == '(2) No', bp_med := 0] # if no history of high bp, bp_med <- 0
# convert data.table back to data.frame
df <- as.data.frame(df)
# # sanity-check
# df[, c('B1PA24', 'B1PA24B', 'B1PA24C', 'bp_med')]
df <- df %>% drop_na(chronic_conditions, # optimism
bp_med)
dim(df)
df_group2 = df
diet_score <- function() {
res <- 0
# Fruit >= 3
res <- res + ifelse(df$B4H21 %in% "(3) 3-4 Servings/day", 1, 0)
res <- res + ifelse(df$B4H21 %in% "(4) 5 Or more servings/day", 1, 0)
# Whole grain >= 3
res <- res + ifelse(df$B4H22 %in% "(3) 3-4 Servings/day", 1, 0)
res <- res + ifelse(df$B4H22 %in% "(4) 5 Or more servings/day", 1, 0)
# Fish >= 1
res <- res + ifelse(df$B4H23A %in% "(3) 1-2 X/week", 1, 0)
res <- res + ifelse(df$B4H23A %in% "(4) 3-4 X/week", 1, 0)
res <- res + ifelse(df$B4H23A %in% "(5) 5 Or more x/week", 1, 0)
# High fat meat <= 2
res <- res + ifelse(df$B4H23B %in% "(1) Never", 1, 0)
res <- res + ifelse(df$B4H23B %in% "(3) 1-2 X/week", 1, 0)
res <- res + ifelse(df$B4H23B %in% "(2) Less than once/week", 1, 0)
# Lean meat >= 1
res <- res + ifelse(df$B4H23C %in% "(3) 1-2 X/week", 1, 0)
res <- res + ifelse(df$B4H23C %in% "(4) 3-4 X/week", 1, 0)
res <- res + ifelse(df$B4H23C %in% "(5) 5 Or more x/week", 1, 0)
# No sugared beverages
res <- res + ifelse(df$B4H20 %in% "(1) None", 1, 0)
# Fast food and delivery
res <- res + ifelse(df$B4H24 %in% "(1) Never", 1, 0)
res <- res + ifelse(df$B4H24 %in% "(2) Less than once/week", 1, 0)
return(res)
}
df = df %>% drop_na(B4H21, B4H22, B4H23A, B4H23B, B4H23C, B4H20, B4H24)
# First we need to check if the person is reported a drinker (like smoking): B4H33
df$alcohol <- df$B4H36 # average number of drinks consumed/day in the past month. See page 1426 in the paper
df[is.na(df$B4H36),]$alcohol = ifelse(df[is.na(df$B4H36),]$B4H33 == '(2) No', 0, NA) # recode to binary
df$exercise <- ifelse(df$B4H25 == '(1) Yes', 1, 0) #regular exercise >= 3 times/week for 20 minutes (no, yes). We apply dummy coding as described in the paper.
df$diet_score <- diet_score()
df <- df %>% mutate(Smoking_Status =
case_when(
B4H26A=="(1) Yes" | B1PA39=="(1) Yes" ~ 1
, (B4H26=="(1) Yes" | B1PA38A=="(1) Yes") ~ 2
, (B4H26=="(2) No" | B1PA38A=="(2) No") ~ 3
)
)
df <- df %>% drop_na(diet_score,
alcohol,
exercise,
Smoking_Status,B1SNEGAF, B4PBMI)
dim(df)
df$B4OPTIM
columns(df)
df
names(df)
getwd()
mean(df$B1SORIEN)
sd(df$B1SORIEN)
ggplot(df, aes(x = B1SORIEN)) +
geom_histogram(colour = 4, fill = "white",
bins = 50)
ggplot(df, aes(x = B1SORIEN)) +
geom_histogram(colour = 4, fill = "white",
bins = 30)
ggplot(df, aes(x = B1SORIEN)) +
geom_histogram(colour = 4, fill = colors,
bins = 30)
colors <- c()
for(i in 1 : 30){
if(i <= 22){
colors <- c(colors, "black")
}
else if(i <= 26){
colors <- c(colors, "gray")
}
else{
colors <- c(colors, "white")
}
}
ggplot(df, aes(x = B1SORIEN)) +
geom_histogram(colour = 4, fill = colors,
bins = 30)
mean(df$B1SOPTIM)
ggplot(df, aes(x = B1SORIEN)) +
geom_histogram(colour = 4, fill = colors,
bins = 30) +
geom_vline(x = mean(df$B1SORIEN), linetype = "longdash")
ggplot(df, aes(x = B1SORIEN)) +
geom_histogram(colour = 4, fill = colors,
bins = 30) +
geom_vline(xintercept = mean(df$B1SORIEN), linetype = "longdash")
ggplot(df, aes(x = B1SORIEN)) +
geom_histogram(colour = 4, fill = colors,
bins = 30) +
geom_vline(xintercept = quantile(df$B1SORIEN, 1 / 3), linetype = "longdash")
ggplot(df, aes(x = B1SORIEN)) +
geom_histogram(colour = 4, fill = colors,
bins = 30) +
geom_vline(xintercept = quantile(df$B1SORIEN, 1 / 3), linetype = "longdash") +
geom_vline(xintercept = quantile(df$B1SORIEN, 2 / 3), linetype = "longdash")
quantile(df$B1SORIEN, 1 / 3)
quantile(df$B1SORIEN, 2 / 3)
colors <- c()
for(i in 1 : 30){
if(i <= 20){
colors <- c(colors, "black")
}
else if(i <= 26){
colors <- c(colors, "gray")
}
else{
colors <- c(colors, "white")
}
}
ggplot(df, aes(x = B1SORIEN)) +
geom_histogram(colour = 4, fill = colors,
bins = 30) +
geom_vline(xintercept = quantile(df$B1SORIEN, 1 / 3), linetype = "longdash") +
geom_vline(xintercept = quantile(df$B1SORIEN, 2 / 3), linetype = "longdash")
rm(list = ls())
library(dplyr)
library(ggplot2)
library(tidyr)
library(forcats)
dirname(sys.frame(1)$ofile)
system("pwd", intern = T)
setwd(system("pwd", intern = T))
load("data/04652-0001-Data.rda") # load MIDUS2 interview/questionnaire data
load("data/29282-0001-Data.rda") # load MIDUS2 biomarker data
df <- inner_join(da29282.0001, da04652.0001, by="M2ID") # merge the two dataframes using an inner join
dim(df)
df <- df %>% drop_na(B1SORIEN, # optimism
B4BHDL, # lipids
B4BLDL,
B4BCHOL,
B4BTRIGL,
B1PAGE_M2.x, # demographics
B1PRSEX.x,
B1PF7A,
B1PB1,
B1STINC1)
dim(df)
# Collapse factors of the education variable to those that the authors use
# Note that it is not clear whether the authors categorized "(08) Graduated from 2-year college, vocational school, or associate degree"
# as "Some college" (as is traditional in social science research) or "College degree or greater" (which is more logical given the scale of the variable)
educ <- fct_collapse(df$B1PB1,
`Less than high school` = c("(01) No school/some grade school (1-6)",
"(02) Eighth grade/junior high school (7-8)",
"(03) Some high school (9-12 no diploma/no GED)"),
`High school degree` = c("(04) GED", "(05) Graduated from high school"),
`Some college` = c("(06) 1 to 2 years of college, no degree yet",
"(07) 3 or more years of college, no degree yet"),
`College degree or greater` = c("(08) Graduated from 2-year college, vocational school, or associate degree",
"(09) Graduated from a 4- or 5-year college, or bachelor's degree",
"(10) Some graduate school",
"(11) Master's degree",
"(12) PH.D., ED.D., MD, DDS, LLB, LLD, JD, or other professional degree")
)
df$B1PB1 <- educ
# Collapse race variable categories
race <- fct_collapse(df$B1PF7A,
`White` = "(1) White",
`Nonwhite` = c("(2) Black and/or African American",
"(3) Native American or Alaska Native Aleutian Islander/Eskimo",
"(4) Asian",
"(5) Native Hawaiian or Pacific Islander",
"(6) Other (specify)")
)
df$B1PF7A <- race
# Recode sex to simplify strings
age <- fct_collapse(df$B1PRSEX.x, `Male` = "(1) Male", `Female` = "(2) Female")
df$B1PRSEX.x <- age
## Comment: usually it is better not to change columns, but to add them
df_group1 = df
```
df <- df %>% drop_na(B1SORIEN, # optimism
B4BHDL, # lipids
B4BLDL,
B4BCHOL,
B4BTRIGL,
B1PAGE_M2.x, # demographics
B1PRSEX.x,
B1PF7A,
B1PB1,
B1STINC1)
dim(df)
educ <- fct_collapse(df$B1PB1,
`Less than high school` = c("(01) No school/some grade school (1-6)",
"(02) Eighth grade/junior high school (7-8)",
"(03) Some high school (9-12 no diploma/no GED)"),
`High school degree` = c("(04) GED", "(05) Graduated from high school"),
`Some college` = c("(06) 1 to 2 years of college, no degree yet",
"(07) 3 or more years of college, no degree yet"),
`College degree or greater` = c("(08) Graduated from 2-year college, vocational school, or associate degree",
"(09) Graduated from a 4- or 5-year college, or bachelor's degree",
"(10) Some graduate school",
"(11) Master's degree",
"(12) PH.D., ED.D., MD, DDS, LLB, LLD, JD, or other professional degree")
)
df$B1PB1 <- educ
df$B1PB1 <- educ
race <- fct_collapse(df$B1PF7A,
`White` = "(1) White",
`Nonwhite` = c("(2) Black and/or African American",
"(3) Native American or Alaska Native Aleutian Islander/Eskimo",
"(4) Asian",
"(5) Native Hawaiian or Pacific Islander",
"(6) Other (specify)")
)
df$B1PF7A <- race
age <- fct_collapse(df$B1PRSEX.x, `Male` = "(1) Male", `Female` = "(2) Female")
df$B1PRSEX.x <- age
df_group1 = df
dim(df)
if (!require('pacman')) {
install.packages('pacman')
}
pacman::p_load('data.table')
df <- data.table(df)
# create chronic conditions variable
df[!is.na(B1SCHROX), chronic_conditions := ifelse(B1SCHROX == '(1) Yes', 1, 0)] # recode to binary
df[!is.na(B1PA24B) | !is.na(B1PA24C), bp_med := ifelse( (B1PA24B == '(1) Yes' & !is.na(B1PA24B)) | (B1PA24C == '(1) Yes' & !is.na(B1PA24C)), 1, 0)]
df[B1PA24 == '(2) No', bp_med := 0] # if no history of high bp, bp_med <- 0
# convert data.table back to data.frame
df <- as.data.frame(df)
df <- df %>% drop_na(chronic_conditions, # optimism
bp_med)
dim(df)
df_group2 = df
diet_score <- function() {
res <- 0
# Fruit >= 3
res <- res + ifelse(df$B4H21 %in% "(3) 3-4 Servings/day", 1, 0)
res <- res + ifelse(df$B4H21 %in% "(4) 5 Or more servings/day", 1, 0)
# Whole grain >= 3
res <- res + ifelse(df$B4H22 %in% "(3) 3-4 Servings/day", 1, 0)
res <- res + ifelse(df$B4H22 %in% "(4) 5 Or more servings/day", 1, 0)
# Fish >= 1
res <- res + ifelse(df$B4H23A %in% "(3) 1-2 X/week", 1, 0)
res <- res + ifelse(df$B4H23A %in% "(4) 3-4 X/week", 1, 0)
res <- res + ifelse(df$B4H23A %in% "(5) 5 Or more x/week", 1, 0)
# High fat meat <= 2
res <- res + ifelse(df$B4H23B %in% "(1) Never", 1, 0)
res <- res + ifelse(df$B4H23B %in% "(3) 1-2 X/week", 1, 0)
res <- res + ifelse(df$B4H23B %in% "(2) Less than once/week", 1, 0)
# Lean meat >= 1
res <- res + ifelse(df$B4H23C %in% "(3) 1-2 X/week", 1, 0)
res <- res + ifelse(df$B4H23C %in% "(4) 3-4 X/week", 1, 0)
res <- res + ifelse(df$B4H23C %in% "(5) 5 Or more x/week", 1, 0)
# No sugared beverages
res <- res + ifelse(df$B4H20 %in% "(1) None", 1, 0)
# Fast food and delivery
res <- res + ifelse(df$B4H24 %in% "(1) Never", 1, 0)
res <- res + ifelse(df$B4H24 %in% "(2) Less than once/week", 1, 0)
return(res)
}
df = df %>% drop_na(B4H21, B4H22, B4H23A, B4H23B, B4H23C, B4H20, B4H24)
df$alcohol <- df$B4H36 # average number of drinks consumed/day in the past month. See page 1426 in the paper
df[is.na(df$B4H36),]$alcohol = ifelse(df[is.na(df$B4H36),]$B4H33 == '(2) No', 0, NA) # recode to binary
df$exercise <- ifelse(df$B4H25 == '(1) Yes', 1, 0) #regular exercise >= 3 times/week for 20 minutes (no, yes). We apply dummy coding as described in the paper.
df$diet_score <- diet_score()
df <- df %>% mutate(Smoking_Status =
case_when(
B4H26A=="(1) Yes" | B1PA39=="(1) Yes" ~ 1
, (B4H26=="(1) Yes" | B1PA38A=="(1) Yes") ~ 2
, (B4H26=="(2) No" | B1PA38A=="(2) No") ~ 3
)
)
df <- df %>% drop_na(diet_score,
alcohol,
exercise,
Smoking_Status,B1SNEGAF, B4PBMI)
dim(df)
mean(df$B1SORIEN) #  Paper has 23.95
sd(df$B1SORIEN) #  Paper has 4.69
colors <- c()
for(i in 1:30){
if(i <= 20){
colors <- c(colors, "black")
}
else if(i <= 26){
colors <- c(colors, "gray")
}
else{
colors <- c(colors, "white")
}
}
ggplot(df, aes(x = B1SORIEN)) +
geom_histogram(colour = 4, fill = colors,
bins = 30)
ggplot(df, aes(x = B1SORIEN)) +
geom_histogram(colour = 4, fill = colors,
bins = 30) +
geom_vline(xintercept = quantile(df$B1SORIEN, 1 / 3)) +
geom_vline(xintercept = quantile(df$B1SORIEN, 2 / 3)))
ggplot(df, aes(x = B1SORIEN)) +
geom_histogram(colour = 4, fill = colors,
bins = 30) +
geom_vline(xintercept = quantile(df$B1SORIEN, 1 / 3)) +
geom_vline(xintercept = quantile(df$B1SORIEN, 2 / 3))
